import requests
from flask import Flask, Response

app = Flask(__name__)

# VARIANT 1 ----------------------------------------------------------------
variant_1 = ['#B02E26', '#974800', '#8E7500', '#3F6900', '#4B6700', '#00696A', '#4B53B9', '#006493', '#8A33B8', '#9E2A99', '#99405E', '#1B1B1B']
on_variant_1 = '#FFF'

# VARIANT 2 ----------------------------------------------------------------
variant_2 = ['#FFB4AA', '#FFB689', '#E9C327', '#92DA35', '#AFD364', '#4CDADB', '#BEC2FF', '#8DCDFF', '#E8B3FF', '#FFABF1', '#FFB1C5', '#C6C6C6']
on_variant_2 = ['#690004', '#512400', '#3B2F00', '#1F3700', '#253600', '#003737', '#181F89', '#00344F', '#500075', '#5C005A', '#5E1130', '#303030']

# VARIANT 3 ----------------------------------------------------------------
variant_3 = ['#FFDAD5', '#FFDBC7', '#FFE177', '#ACF850', '#CAF07D', '#6FF6F7', '#E0E0FF', '#CAE6FF', '#F6D9FF', '#FFD7F4', '#FFD9E1', '#E2E2E2']
on_variant_3 = ['#410001', '#311300', '#231B00', '#102000', '#141F00', '#002020', '#00036B', '#001E30', '#310049', '#380037', '#3F001B', '#1B1B1B']


@app.route('/stars/<style>/<variant>/<username>/<repo>')
def github_stars_badge(style, variant, username, repo):
    if int(style) > 12 or int(style) < 0:
        index = 0
    else:
        index = int(style) - 1

    if variant == '1':
        background = variant_1[index]
        foreground = on_variant_1
    if variant == '2':
        background = variant_2[index]
        foreground = on_variant_2[index]
    if variant == '3':
        background = variant_3[index]
        foreground = on_variant_3[index]

    stars_label = f'<path xmlns="http://www.w3.org/2000/svg" d="M5.82 19.32C5.20667 19.32 4.62 19.2333 4.06 19.06C3.5 18.8867 2.98667 18.6267 2.52 18.28C2.05333 17.9333 1.64667 17.5133 1.3 17.02C0.953333 16.5133 0.68 15.9267 0.48 15.26L3.02 14.26C3.20667 14.98 3.53333 15.58 4 16.06C4.46667 16.5267 5.08 16.76 5.84 16.76C6.12 16.76 6.38667 16.7267 6.64 16.66C6.90667 16.58 7.14 16.4733 7.34 16.34C7.55333 16.1933 7.72 16.0133 7.84 15.8C7.96 15.5867 8.02 15.34 8.02 15.06C8.02 14.7933 7.97333 14.5533 7.88 14.34C7.78667 14.1267 7.62667 13.9267 7.4 13.74C7.18667 13.5533 6.9 13.3733 6.54 13.2C6.19333 13.0267 5.76 12.8467 5.24 12.66L4.36 12.34C3.97333 12.2067 3.58 12.0267 3.18 11.8C2.79333 11.5733 2.44 11.3 2.12 10.98C1.8 10.66 1.53333 10.2867 1.32 9.86C1.12 9.42 1.02 8.92667 1.02 8.38C1.02 7.82 1.12667 7.3 1.34 6.82C1.56667 6.32667 1.88 5.9 2.28 5.54C2.69333 5.16667 3.18 4.88 3.74 4.68C4.31333 4.46667 4.94667 4.36 5.64 4.36C6.36 4.36 6.98 4.46 7.5 4.66C8.03333 4.84667 8.48 5.09333 8.84 5.4C9.21333 5.69333 9.51333 6.02 9.74 6.38C9.96667 6.74 10.1333 7.08 10.24 7.4L7.86 8.4C7.72667 8 7.48 7.64 7.12 7.32C6.77333 7 6.29333 6.84 5.68 6.84C5.09333 6.84 4.60667 6.98 4.22 7.26C3.83333 7.52667 3.64 7.88 3.64 8.32C3.64 8.74667 3.82667 9.11333 4.2 9.42C4.57333 9.71333 5.16667 10 5.98 10.28L6.88 10.58C7.45333 10.78 7.97333 11.0133 8.44 11.28C8.92 11.5333 9.32667 11.84 9.66 12.2C10.0067 12.56 10.2667 12.9733 10.44 13.44C10.6267 13.8933 10.72 14.42 10.72 15.02C10.72 15.7667 10.5667 16.4133 10.26 16.96C9.96667 17.4933 9.58667 17.9333 9.12 18.28C8.65333 18.6267 8.12667 18.8867 7.54 19.06C6.95333 19.2333 6.38 19.32 5.82 19.32ZM13.1961 11.44H11.4761V9.2H13.1961V6.2H15.8161V9.2H18.2161V11.44H15.8161V15.24C15.8161 15.4667 15.8361 15.68 15.8761 15.88C15.9294 16.0667 16.0228 16.2267 16.1561 16.36C16.3428 16.5733 16.6094 16.68 16.9561 16.68C17.1828 16.68 17.3628 16.66 17.4961 16.62C17.6294 16.5667 17.7561 16.5 17.8761 16.42L18.6161 18.72C18.3094 18.8667 17.9761 18.9733 17.6161 19.04C17.2694 19.12 16.8828 19.16 16.4561 19.16C15.9628 19.16 15.5161 19.0867 15.1161 18.94C14.7294 18.78 14.4028 18.5667 14.1361 18.3C13.5094 17.7 13.1961 16.8467 13.1961 15.74V11.44ZM25.9881 17.96H25.8281C25.5215 18.3333 25.1481 18.6533 24.7081 18.92C24.2815 19.1867 23.7281 19.32 23.0481 19.32C22.5415 19.32 22.0615 19.2333 21.6081 19.06C21.1681 18.9 20.7815 18.6733 20.4481 18.38C20.1148 18.0867 19.8548 17.7333 19.6681 17.32C19.4815 16.9067 19.3881 16.4533 19.3881 15.96C19.3881 15.4533 19.4881 15 19.6881 14.6C19.8881 14.1867 20.1681 13.8333 20.5281 13.54C20.8881 13.2467 21.3081 13.0267 21.7881 12.88C22.2815 12.72 22.8148 12.64 23.3881 12.64C24.0281 12.64 24.5548 12.6933 24.9681 12.8C25.3815 12.8933 25.7215 12.9933 25.9881 13.1V12.8C25.9881 12.28 25.7815 11.8533 25.3681 11.52C24.9548 11.1733 24.4415 11 23.8281 11C22.9215 11 22.1548 11.38 21.5281 12.14L19.6281 10.84C20.6681 9.53333 22.0881 8.88 23.8881 8.88C25.4081 8.88 26.5681 9.24 27.3681 9.96C28.1681 10.6667 28.5681 11.72 28.5681 13.12V19H25.9881V17.96ZM25.9881 15.02C25.6815 14.8733 25.3615 14.76 25.0281 14.68C24.7081 14.5867 24.3548 14.54 23.9681 14.54C23.3415 14.54 22.8548 14.68 22.5081 14.96C22.1748 15.2267 22.0081 15.56 22.0081 15.96C22.0081 16.36 22.1681 16.68 22.4881 16.92C22.8215 17.16 23.2015 17.28 23.6281 17.28C23.9748 17.28 24.2948 17.22 24.5881 17.1C24.8815 16.9667 25.1281 16.8 25.3281 16.6C25.5415 16.3867 25.7015 16.1467 25.8081 15.88C25.9281 15.6 25.9881 15.3133 25.9881 15.02ZM30.6513 9.2H33.1113V10.56H33.2713C33.3913 10.32 33.5513 10.1 33.7513 9.9C33.9513 9.7 34.1713 9.52667 34.4113 9.38C34.6646 9.23333 34.9313 9.12 35.2113 9.04C35.5046 8.96 35.7913 8.92 36.0713 8.92C36.4179 8.92 36.7113 8.95333 36.9513 9.02C37.2046 9.08667 37.4179 9.17333 37.5913 9.28L36.8913 11.66C36.7313 11.58 36.5513 11.52 36.3513 11.48C36.1646 11.4267 35.9313 11.4 35.6513 11.4C35.2913 11.4 34.9646 11.4733 34.6712 11.62C34.3779 11.7533 34.1246 11.9467 33.9113 12.2C33.7113 12.4533 33.5513 12.7533 33.4313 13.1C33.3246 13.4333 33.2713 13.8 33.2713 14.2V19H30.6513V9.2ZM42.2852 19.32C41.6452 19.32 41.0718 19.24 40.5652 19.08C40.0718 18.92 39.6385 18.7133 39.2652 18.46C38.9052 18.1933 38.5985 17.8933 38.3452 17.56C38.0918 17.2133 37.8985 16.8667 37.7652 16.52L40.1052 15.52C40.3318 16.0267 40.6318 16.4067 41.0052 16.66C41.3918 16.9 41.8185 17.02 42.2852 17.02C42.7652 17.02 43.1452 16.9333 43.4252 16.76C43.7052 16.5867 43.8452 16.38 43.8452 16.14C43.8452 15.8733 43.7252 15.66 43.4852 15.5C43.2585 15.3267 42.8585 15.1733 42.2852 15.04L40.9052 14.74C40.5985 14.6733 40.2785 14.5667 39.9452 14.42C39.6252 14.2733 39.3318 14.0867 39.0652 13.86C38.7985 13.6333 38.5785 13.36 38.4052 13.04C38.2318 12.72 38.1452 12.3467 38.1452 11.92C38.1452 11.44 38.2452 11.0133 38.4452 10.64C38.6585 10.2667 38.9452 9.95333 39.3052 9.7C39.6652 9.43333 40.0852 9.23333 40.5652 9.1C41.0585 8.95333 41.5852 8.88 42.1452 8.88C43.0785 8.88 43.9118 9.06667 44.6452 9.44C45.3785 9.8 45.9185 10.38 46.2652 11.18L44.0052 12.1C43.8185 11.7133 43.5452 11.4333 43.1852 11.26C42.8252 11.0867 42.4652 11 42.1052 11C41.7318 11 41.4052 11.08 41.1252 11.24C40.8452 11.3867 40.7052 11.58 40.7052 11.82C40.7052 12.0467 40.8185 12.2267 41.0452 12.36C41.2852 12.4933 41.6052 12.6133 42.0052 12.72L43.5052 13.08C44.5052 13.32 45.2452 13.7067 45.7252 14.24C46.2185 14.76 46.4652 15.38 46.4652 16.1C46.4652 16.5267 46.3652 16.9333 46.1652 17.32C45.9652 17.7067 45.6785 18.0533 45.3052 18.36C44.9452 18.6533 44.5052 18.8867 43.9852 19.06C43.4785 19.2333 42.9118 19.32 42.2852 19.32ZM54.0477 19.12C53.5677 19.12 53.1543 18.9533 52.8077 18.62C52.4743 18.2733 52.3077 17.86 52.3077 17.38C52.3077 16.9 52.4743 16.4933 52.8077 16.16C53.1543 15.8267 53.5677 15.66 54.0477 15.66C54.5277 15.66 54.9343 15.8267 55.2677 16.16C55.601 16.4933 55.7677 16.9 55.7677 17.38C55.7677 17.86 55.601 18.2733 55.2677 18.62C54.9343 18.9533 54.5277 19.12 54.0477 19.12ZM54.0477 12.42C53.5677 12.42 53.1543 12.2533 52.8077 11.92C52.4743 11.5733 52.3077 11.16 52.3077 10.68C52.3077 10.2 52.4743 9.79333 52.8077 9.46C53.1543 9.11333 53.5677 8.94 54.0477 8.94C54.5277 8.94 54.9343 9.11333 55.2677 9.46C55.601 9.79333 55.7677 10.2 55.7677 10.68C55.7677 11.16 55.601 11.5733 55.2677 11.92C54.9343 12.2533 54.5277 12.42 54.0477 12.42Z" fill="{foreground}"/>'
    stars_icon = f'<path xmlns="http://www.w3.org/2000/svg" d="M9.41638 1.99571e-07C9.59432 -0.000114929 9.76875 0.0495835 9.91991 0.14347C10.0711 0.237357 10.1929 0.371683 10.2717 0.531245L12.6636 5.3798L18.0142 6.15761C18.1901 6.18317 18.3554 6.25744 18.4914 6.37203C18.6274 6.48663 18.7286 6.63697 18.7836 6.80608C18.8386 6.97518 18.8452 7.15629 18.8027 7.32895C18.7601 7.50161 18.6701 7.65893 18.5429 7.78312L14.6716 11.5577L15.5854 16.8854C15.6151 17.0606 15.5952 17.2406 15.5281 17.4051C15.461 17.5696 15.3493 17.7121 15.2056 17.8166C15.0619 17.9211 14.8919 17.9834 14.7147 17.9965C14.5375 18.0096 14.3602 17.973 14.2027 17.8907L9.41638 15.3743L4.63009 17.8907C4.47273 17.9734 4.29541 18.0103 4.11815 17.9975C3.94089 17.9847 3.77074 17.9225 3.62693 17.8181C3.48311 17.7137 3.37136 17.5711 3.30428 17.4066C3.23721 17.242 3.21748 17.0619 3.24733 16.8867L4.16239 11.5565L0.288626 7.78312C0.160983 7.65898 0.0706622 7.50157 0.0278989 7.32872C-0.0148643 7.15588 -0.00836032 6.97451 0.0466739 6.80518C0.101708 6.63584 0.203072 6.48531 0.33928 6.37063C0.475487 6.25595 0.641092 6.18172 0.817329 6.15634L6.1679 5.3798L8.56105 0.531245C8.63982 0.371683 8.76168 0.237357 8.91284 0.14347C9.064 0.0495835 9.23843 -0.000114929 9.41638 1.99571e-07Z" fill="{foreground}"/>'

    stars_count_str = ''
    url = f'https://api.github.com/repos/{username}/{repo}'
    headers = {'Accept': 'application/vnd.github.v3+json'}
    r = requests.get(url, headers=headers)
    if r.ok:
        data = r.json()
        stars = str(data['stargazers_count'])
        str_spacing = []
        digits_order = []
        next_digit = 0
        digit_index = 0

        for digit in list(stars):
            if digit == '0':
                digits_order.append('zero')
                next_spacing = 12
            elif digit == '1':
                digits_order.append('one')
                next_spacing = 8
            elif digit == '2':
                digits_order.append('two')
                next_spacing = 11
            elif digit == '3':
                digits_order.append('three')
                next_spacing = 11
            elif digit == '4':
                digits_order.append('four')
                next_spacing = 11
            elif digit == '5':
                digits_order.append('five')
                next_spacing = 10
            elif digit == '6':
                digits_order.append('six')
                next_spacing = 11
            elif digit == '7':
                digits_order.append('seven')
                next_spacing = 11
            elif digit == '8':
                digits_order.append('eight')
                next_spacing = 10
            elif digit == '9':
                digits_order.append('nine')
                next_spacing = 11
            if not str_spacing:
                str_spacing.append(100)
                str_spacing.append(str_spacing[next_digit - 1] + next_spacing)
                next_digit += 1
            else:
                next_digit += 1
                str_spacing.append(str_spacing[next_digit - 1] + next_spacing)

        for digit in digits_order:
            if digit == 'zero':
                stars_count_str += f'<svg x="{str_spacing[digit_index]}"><path xmlns="http://www.w3.org/2000/svg" d="M5.99891 14.32C5.11891 14.32 4.32557 14.14 3.61891 13.78C2.91224 13.4067 2.30557 12.9 1.79891 12.26C1.30557 11.62 0.925573 10.8667 0.658906 10C0.39224 9.12 0.258906 8.17333 0.258906 7.16C0.258906 6.14667 0.39224 5.20667 0.658906 4.34C0.925573 3.46 1.30557 2.7 1.79891 2.06C2.30557 1.42 2.91224 0.919999 3.61891 0.559999C4.32557 0.186666 5.11891 -9.53674e-07 5.99891 -9.53674e-07C6.87891 -9.53674e-07 7.67224 0.186666 8.37891 0.559999C9.08557 0.919999 9.68557 1.42 10.1789 2.06C10.6856 2.7 11.0722 3.46 11.3389 4.34C11.6056 5.20667 11.7389 6.14667 11.7389 7.16C11.7389 8.17333 11.6056 9.12 11.3389 10C11.0722 10.8667 10.6856 11.62 10.1789 12.26C9.68557 12.9 9.08557 13.4067 8.37891 13.78C7.67224 14.14 6.87891 14.32 5.99891 14.32ZM5.99891 11.84C6.47891 11.84 6.91224 11.7267 7.29891 11.5C7.68557 11.26 8.01224 10.9333 8.27891 10.52C8.55891 10.0933 8.76557 9.59333 8.89891 9.02C9.04557 8.44667 9.11891 7.82667 9.11891 7.16C9.11891 6.48 9.04557 5.86 8.89891 5.3C8.76557 4.72667 8.55891 4.23333 8.27891 3.82C8.01224 3.39333 7.68557 3.06667 7.29891 2.84C6.91224 2.6 6.47891 2.48 5.99891 2.48C5.50557 2.48 5.06557 2.6 4.67891 2.84C4.29224 3.06667 3.96557 3.39333 3.69891 3.82C3.43224 4.23333 3.22557 4.72667 3.07891 5.3C2.94557 5.86 2.87891 6.48 2.87891 7.16C2.87891 7.82667 2.94557 8.44667 3.07891 9.02C3.22557 9.59333 3.43224 10.0933 3.69891 10.52C3.96557 10.9333 4.29224 11.26 4.67891 11.5C5.06557 11.7267 5.50557 11.84 5.99891 11.84Z" fill="{foreground}"/></svg>'
            elif digit == 'one':
                stars_count_str += f'<svg x="{str_spacing[digit_index]}"><path xmlns="http://www.w3.org/2000/svg" d="M3.44172 14V3.4L1.02172 4.42L0.0617188 2.2L4.08172 0.32H6.06172V14H3.44172Z" fill="{foreground}"/></svg>'
            elif digit == 'two':
                stars_count_str += f'<svg x="{str_spacing[digit_index]}"><path xmlns="http://www.w3.org/2000/svg" d="M0.970781 14V11.62C1.75745 10.8467 2.48411 10.1267 3.15078 9.46C3.43078 9.18 3.71745 8.89333 4.01078 8.6C4.30411 8.30667 4.57745 8.03333 4.83078 7.78C5.08411 7.52667 5.31078 7.3 5.51078 7.1C5.71078 6.88667 5.86411 6.72 5.97078 6.6C6.18411 6.34667 6.37078 6.12 6.53078 5.92C6.70411 5.72 6.83745 5.52667 6.93078 5.34C7.03745 5.14 7.11745 4.94667 7.17078 4.76C7.22411 4.56 7.25078 4.34667 7.25078 4.12C7.25078 3.68 7.07745 3.3 6.73078 2.98C6.38412 2.64667 5.91078 2.48 5.31078 2.48C4.71078 2.48 4.24411 2.65333 3.91078 3C3.57745 3.33333 3.35078 3.71333 3.23078 4.14L0.850781 3.16C0.957448 2.8 1.13078 2.43333 1.37078 2.06C1.61078 1.67333 1.91745 1.33333 2.29078 1.04C2.66411 0.733333 3.10411 0.486666 3.61078 0.299999C4.13078 0.099999 4.71078 -9.53674e-07 5.35078 -9.53674e-07C6.04411 -9.53674e-07 6.67078 0.106666 7.23078 0.32C7.79078 0.52 8.26411 0.799999 8.65078 1.16C9.03745 1.52 9.33745 1.94667 9.55078 2.44C9.76412 2.92 9.87078 3.44 9.87078 4C9.87078 4.85333 9.65745 5.64 9.23078 6.36C8.81745 7.06667 8.31078 7.72667 7.71078 8.34L5.99078 10.06C5.53745 10.5133 5.02411 11.02 4.45078 11.58L4.53078 11.7H10.0708V14H0.970781Z" fill="{foreground}"/></svg>'
            elif digit == 'three':
                stars_count_str += f'<svg x="{str_spacing[digit_index]}"><path xmlns="http://www.w3.org/2000/svg" d="M5.0243 14.32C4.4643 14.32 3.9243 14.2467 3.4043 14.1C2.89763 13.9533 2.43096 13.7333 2.0043 13.44C1.57763 13.1333 1.19763 12.7533 0.864297 12.3C0.544297 11.8467 0.29763 11.32 0.124297 10.72L2.5843 9.74C2.75763 10.4067 3.05096 10.9133 3.4643 11.26C3.87763 11.5933 4.39763 11.76 5.0243 11.76C5.3043 11.76 5.57096 11.72 5.8243 11.64C6.07763 11.5467 6.29763 11.42 6.4843 11.26C6.67096 11.1 6.81763 10.9133 6.9243 10.7C7.0443 10.4733 7.1043 10.22 7.1043 9.94C7.1043 9.35333 6.8843 8.89333 6.4443 8.56C6.01763 8.22667 5.4243 8.06 4.6643 8.06H3.4843V5.68H4.5643C4.83096 5.68 5.09096 5.64667 5.3443 5.58C5.59763 5.51333 5.81763 5.41333 6.0043 5.28C6.2043 5.13333 6.35763 4.95333 6.4643 4.74C6.5843 4.51333 6.6443 4.25333 6.6443 3.96C6.6443 3.50667 6.4843 3.14 6.1643 2.86C5.8443 2.56667 5.41096 2.42 4.8643 2.42C4.27763 2.42 3.8243 2.58 3.5043 2.9C3.19763 3.20667 2.9843 3.55333 2.8643 3.94L0.464297 2.96C0.584297 2.62667 0.764297 2.28667 1.0043 1.94C1.2443 1.58 1.5443 1.26 1.9043 0.98C2.27763 0.686666 2.71096 0.453333 3.2043 0.279999C3.69763 0.0933324 4.2643 -9.53674e-07 4.9043 -9.53674e-07C5.55763 -9.53674e-07 6.15096 0.0933324 6.6843 0.279999C7.23096 0.466666 7.69763 0.726666 8.0843 1.06C8.47096 1.38 8.77096 1.76667 8.9843 2.22C9.19763 2.66 9.3043 3.14 9.3043 3.66C9.3043 4.06 9.25096 4.42 9.1443 4.74C9.05096 5.06 8.9243 5.34667 8.7643 5.6C8.6043 5.85333 8.41763 6.07333 8.2043 6.26C8.0043 6.43333 7.79763 6.57333 7.5843 6.68V6.84C8.2243 7.09333 8.75096 7.5 9.1643 8.06C9.59096 8.62 9.8043 9.32667 9.8043 10.18C9.8043 10.78 9.69096 11.3333 9.4643 11.84C9.23763 12.3333 8.91096 12.7667 8.4843 13.14C8.07096 13.5133 7.57096 13.8 6.9843 14C6.39763 14.2133 5.7443 14.32 5.0243 14.32Z" fill="{foreground}"/></svg>'
            elif digit == 'four':
                stars_count_str += f'<svg x="{str_spacing[digit_index]}"><path xmlns="http://www.w3.org/2000/svg" d="M6.45789 14V11.48H0.137891V9.36L6.21789 0.32H9.05789V9.04H10.7779V11.48H9.05789V14H6.45789ZM6.45789 4.22H6.29789L3.03789 9.04H6.45789V4.22Z" fill="{foreground}"/></svg>'
            elif digit == 'five':
                stars_count_str += f'<svg x="{str_spacing[digit_index]}"><path xmlns="http://www.w3.org/2000/svg" d="M4.91781 14.32C4.39781 14.32 3.87781 14.2467 3.35781 14.1C2.85115 13.9533 2.37781 13.7267 1.93781 13.42C1.49781 13.1133 1.11115 12.7333 0.777813 12.28C0.457813 11.8133 0.217813 11.26 0.0578126 10.62L2.43781 9.7C2.58448 10.3667 2.86448 10.9 3.27781 11.3C3.70448 11.7 4.24448 11.9 4.89781 11.9C5.21781 11.9 5.51115 11.8467 5.77781 11.74C6.05781 11.62 6.29781 11.46 6.49781 11.26C6.71115 11.06 6.87115 10.8267 6.97781 10.56C7.09781 10.28 7.15781 9.97333 7.15781 9.64C7.15781 9.32 7.09781 9.02667 6.97781 8.76C6.87115 8.48 6.71781 8.24 6.51781 8.04C6.31781 7.82667 6.07781 7.66667 5.79781 7.56C5.53115 7.44 5.23115 7.38 4.89781 7.38C4.48448 7.38 4.11781 7.47333 3.79781 7.66C3.47781 7.83333 3.20448 8.05333 2.97781 8.32L0.437813 7.16L1.23781 0.32H8.93781V2.62H3.41781L2.89781 5.82L3.05781 5.86C3.32448 5.63333 3.65115 5.44 4.03781 5.28C4.42448 5.12 4.89115 5.04 5.43781 5.04C6.01115 5.04 6.55781 5.15333 7.07781 5.38C7.59781 5.59333 8.05781 5.9 8.45781 6.3C8.85781 6.7 9.17781 7.18667 9.41781 7.76C9.65781 8.32 9.77781 8.94667 9.77781 9.64C9.77781 10.32 9.65781 10.9467 9.41781 11.52C9.17781 12.0933 8.83781 12.5867 8.39781 13C7.97115 13.4133 7.45781 13.74 6.85781 13.98C6.27115 14.2067 5.62448 14.32 4.91781 14.32Z" fill="{foreground}"/></svg>'
            elif digit == 'six':
                stars_count_str += f'<svg x="{str_spacing[digit_index]}" y="-1"><path xmlns="http://www.w3.org/2000/svg" d="M5.75641 6.2C6.27641 6.2 6.78307 6.31333 7.27641 6.54C7.76974 6.75333 8.20974 7.05333 8.59641 7.44C8.98307 7.82667 9.28974 8.29333 9.51641 8.84C9.75641 9.38667 9.87641 9.98667 9.87641 10.64C9.87641 11.32 9.74307 11.9467 9.47641 12.52C9.20974 13.0933 8.84974 13.5867 8.39641 14C7.95641 14.4133 7.44307 14.74 6.85641 14.98C6.28307 15.2067 5.67641 15.32 5.03641 15.32C4.28974 15.32 3.61641 15.1933 3.01641 14.94C2.41641 14.6733 1.89641 14.3267 1.45641 13.9C1.02974 13.46 0.696406 12.9533 0.456406 12.38C0.22974 11.7933 0.116406 11.18 0.116406 10.54C0.116406 9.62 0.296406 8.78 0.656406 8.02C1.02974 7.24667 1.49641 6.46 2.05641 5.66L5.37641 0.919999L7.39641 2.32L4.59641 6.28L4.69641 6.4C5.00307 6.26667 5.35641 6.2 5.75641 6.2ZM4.99641 12.9C5.28974 12.9 5.57641 12.8467 5.85641 12.74C6.13641 12.6333 6.38307 12.48 6.59641 12.28C6.80974 12.08 6.97641 11.8467 7.09641 11.58C7.22974 11.3 7.29641 10.9933 7.29641 10.66C7.29641 10.3267 7.22974 10.02 7.09641 9.74C6.97641 9.46 6.80974 9.22 6.59641 9.02C6.38307 8.82 6.13641 8.66667 5.85641 8.56C5.57641 8.45333 5.28974 8.4 4.99641 8.4C4.68974 8.4 4.39641 8.45333 4.11641 8.56C3.84974 8.66667 3.60307 8.82 3.37641 9.02C3.16307 9.22 2.98974 9.46 2.85641 9.74C2.73641 10.02 2.67641 10.3267 2.67641 10.66C2.67641 10.9933 2.73641 11.3 2.85641 11.58C2.98974 11.8467 3.16307 12.08 3.37641 12.28C3.60307 12.48 3.84974 12.6333 4.11641 12.74C4.39641 12.8467 4.68974 12.9 4.99641 12.9Z" fill="{foreground}"/></svg>'
            elif digit == 'seven':
                stars_count_str += f'<svg x="{str_spacing[digit_index]}"><path xmlns="http://www.w3.org/2000/svg" d="M1.50102 13.1L7.20102 2.92L7.14102 2.8H0.841016L0.881016 0.32H10.161V2.92L3.70102 14.32L1.50102 13.1Z" fill="{foreground}"/></svg>'
            elif digit == 'eight':
                stars_count_str += f'<svg x="{str_spacing[digit_index]}"><path xmlns="http://www.w3.org/2000/svg" d="M4.99828 14.32C4.26495 14.32 3.59161 14.2133 2.97828 14C2.37828 13.7867 1.85828 13.5 1.41828 13.14C0.978281 12.7667 0.638281 12.3333 0.398281 11.84C0.158281 11.3333 0.0382813 10.7867 0.0382813 10.2C0.0382813 9.8 0.0916146 9.42667 0.198281 9.08C0.318281 8.73333 0.471615 8.42 0.658281 8.14C0.858281 7.86 1.08495 7.61333 1.33828 7.4C1.59161 7.18667 1.85828 7.00667 2.13828 6.86V6.7C1.69828 6.40667 1.31161 6.02 0.978281 5.54C0.658281 5.06 0.498281 4.5 0.498281 3.86C0.498281 3.31333 0.611615 2.80667 0.838281 2.34C1.06495 1.86 1.37828 1.44667 1.77828 1.1C2.17828 0.753333 2.65161 0.486666 3.19828 0.299999C3.74495 0.099999 4.34495 -9.53674e-07 4.99828 -9.53674e-07C5.65161 -9.53674e-07 6.25161 0.099999 6.79828 0.299999C7.34495 0.486666 7.81828 0.753333 8.21828 1.1C8.61828 1.44667 8.93162 1.86 9.15828 2.34C9.38495 2.80667 9.49828 3.31333 9.49828 3.86C9.49828 4.5 9.33161 5.06 8.99828 5.54C8.67828 6.02 8.29828 6.40667 7.85828 6.7V6.86C8.13828 7.00667 8.40495 7.18667 8.65828 7.4C8.91161 7.61333 9.13161 7.86 9.31828 8.14C9.51828 8.42 9.67162 8.73333 9.77828 9.08C9.89828 9.42667 9.95828 9.8 9.95828 10.2C9.95828 10.7867 9.83828 11.3333 9.59828 11.84C9.35828 12.3333 9.01828 12.7667 8.57828 13.14C8.13828 13.5 7.61161 13.7867 6.99828 14C6.39828 14.2133 5.73162 14.32 4.99828 14.32ZM4.99828 5.72C5.55828 5.72 6.02495 5.56667 6.39828 5.26C6.77161 4.94 6.95828 4.52667 6.95828 4.02C6.95828 3.5 6.77161 3.09333 6.39828 2.8C6.02495 2.49333 5.55828 2.34 4.99828 2.34C4.43828 2.34 3.97161 2.49333 3.59828 2.8C3.22495 3.09333 3.03828 3.5 3.03828 4.02C3.03828 4.52667 3.22495 4.94 3.59828 5.26C3.97161 5.56667 4.43828 5.72 4.99828 5.72ZM4.99828 11.9C5.67828 11.9 6.23828 11.7267 6.67828 11.38C7.11828 11.02 7.33828 10.54 7.33828 9.94C7.33828 9.66 7.27828 9.40667 7.15828 9.18C7.03828 8.94 6.87162 8.73333 6.65828 8.56C6.45828 8.38667 6.21161 8.25333 5.91828 8.16C5.63828 8.06667 5.33162 8.02 4.99828 8.02C4.66495 8.02 4.35161 8.06667 4.05828 8.16C3.77828 8.25333 3.53161 8.38667 3.31828 8.56C3.11828 8.73333 2.95828 8.94 2.83828 9.18C2.71828 9.40667 2.65828 9.66 2.65828 9.94C2.65828 10.54 2.87828 11.02 3.31828 11.38C3.75828 11.7267 4.31828 11.9 4.99828 11.9Z" fill="{foreground}"/></svg>'
            elif digit == 'nine':
                stars_count_str += f'<svg x="{str_spacing[digit_index]}" y="-1"><path xmlns="http://www.w3.org/2000/svg" d="M4.23641 10.1C3.71641 10.1 3.20974 9.99333 2.71641 9.78C2.22307 9.56667 1.78307 9.26667 1.39641 8.88C1.00974 8.48 0.696406 8.01333 0.456406 7.48C0.22974 6.93333 0.116406 6.33333 0.116406 5.68C0.116406 5 0.24974 4.37333 0.516406 3.8C0.783073 3.21333 1.13641 2.71333 1.57641 2.3C2.02974 1.88667 2.54307 1.56667 3.11641 1.34C3.70307 1.1 4.31641 0.979999 4.95641 0.979999C5.68974 0.979999 6.35641 1.11333 6.95641 1.38C7.56974 1.63333 8.08974 1.98 8.51641 2.42C8.95641 2.84667 9.28974 3.35333 9.51641 3.94C9.75641 4.51333 9.87641 5.12 9.87641 5.76C9.87641 6.68 9.68974 7.52667 9.31641 8.3C8.95641 9.06 8.49641 9.84 7.93641 10.64L4.61641 15.38L2.59641 14L5.39641 10.02L5.29641 9.9C4.98974 10.0333 4.63641 10.1 4.23641 10.1ZM4.99641 3.4C4.68974 3.4 4.39641 3.45333 4.11641 3.56C3.84974 3.66667 3.60974 3.82 3.39641 4.02C3.18307 4.22 3.00974 4.46 2.87641 4.74C2.75641 5.00667 2.69641 5.30667 2.69641 5.64C2.69641 5.98667 2.75641 6.3 2.87641 6.58C3.00974 6.84667 3.18307 7.08 3.39641 7.28C3.60974 7.48 3.84974 7.63333 4.11641 7.74C4.39641 7.84667 4.68974 7.9 4.99641 7.9C5.28974 7.9 5.57641 7.84667 5.85641 7.74C6.13641 7.63333 6.38307 7.48 6.59641 7.28C6.82307 7.08 6.99641 6.84667 7.11641 6.58C7.24974 6.3 7.31641 5.98667 7.31641 5.64C7.31641 5.30667 7.24974 5.00667 7.11641 4.74C6.99641 4.46 6.82307 4.22 6.59641 4.02C6.38307 3.82 6.13641 3.66667 5.85641 3.56C5.57641 3.45333 5.28974 3.4 4.99641 3.4Z" fill="{foreground}"/></svg>'
            digit_index += 1

        width = str_spacing[-1] + 15
        svg = f'<svg xmlns="http://www.w3.org/2000/svg" width="{width}" height="30" viewBox="0 0 {width} 30" fill="{background}" rx="15"><path d="M40 0h4v20h-4z" fill="#4c1"/><rect rx="15" width="{width}" height="30" fill="{background}"/><svg x="15" y="6">{stars_icon}</svg><svg x="39" y="3">{stars_label}</svg><svg y="8">{stars_count_str}</svg></svg>'
        
        return Response(svg, mimetype='image/svg+xml')
    else:
        return 'Error during request', r.status_code


# Comment this line before committing
# app.run()
